<!DOCTYPE html>
<html lang="en">
<head>
    <title>@ViewData["Title"]</title>
    <link href="/css/style.css" rel="stylesheet" type="text/css" />
    <link rel="icon" type="image/png" href="/favicon/faviconical.ico">
</head>
<body>
<div class=page>
    <h1><img src="/images/icon2.png" alt="Icon2"/>Twitter</h1>
    <partial name="_LoginPartial" />

    <div class=body>
        @RenderBody() 
    </div>
    <div class=footer>
        Chirp &mdash; An ASP.NET Application
    </div>
</div>

<img id="pingu" src="/images/pingu.gif" alt="Pingu Walking">

<script>
    const pingu = document.getElementById('pingu');
    const page = document.querySelector('.page');

    let currentX = 0;
    let currentY = 0;

    function getRandomPosition() {
        const pageRect = page.getBoundingClientRect();
        const maxX = window.innerWidth - pingu.offsetWidth;
        const maxY = window.innerHeight - pingu.offsetHeight;

        let x, y;

        do {
            x = Math.random() * maxX;
            y = Math.random() * maxY;
        } while (
            x + pingu.offsetWidth > pageRect.left &&
            x < pageRect.right &&
            y + pingu.offsetHeight > pageRect.top &&
            y < pageRect.bottom
        );

        return { x, y };
    }
    
    function calculateDistanceMoved(x1, y1, x2, y2) {
        const dx = x2 - x1;
        const dy = y2 - y1;
        return Math.sqrt(dx * dx + dy * dy);
    }
    
    function movePingu() {
        const { x, y } = getRandomPosition();
        const distance = calculateDistanceMoved(currentX, currentY, x, y);

        const speed = 0.004; // Adjust this multiplier for desired speed
        const duration = distance * speed;

        if (x > currentX) {
            pingu.style.transform = 'scaleX(1)';
        } else {
            pingu.style.transform = 'scaleX(-1)';
        }
        
        pingu.style.transition = `left ${duration}s linear, top ${duration}s linear`;
        pingu.style.left = `${x}px`;
        pingu.style.top = `${y}px`;
        
        currentX = x;
        currentY = y;
    }

    setInterval(movePingu, 2000);
    
    movePingu();
</script>

</body>
@await RenderSectionAsync("Scripts", required: false)
</html>
